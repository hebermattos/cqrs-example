version: '3.8'
services:

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    command: /bin/bash ./entrypoint.sh
    ports:
     - 1433:1433
    environment:
     - ACCEPT_EULA=Y
     - MSSQL_PID=Developer
     - MSSQL_SA_PASSWORD=Passw0rd
     - MSSQL_AGENT_ENABLED=true
     - MSSQL_DATA_DIR=/var/opt/mssql/data
     - MSSQL_TCP_PORT=1433 
    volumes:
      - dbdata:/var/opt/mssql
      - ./SQL/docker-entrypoint.sh:/entrypoint.sh
      - ./SQL/docker-db-init.sh:/db-init.sh
      - ./SQL/docker-db-init.sql:/db-init.sql

  zookeeper:
    image: quay.io/debezium/zookeeper:1.8
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888

  kafka:
    image: quay.io/debezium/kafka:1.8
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8085:8080"
    restart: always
    depends_on:
      - kafka
      - connect
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  connect:
    build:
      dockerfile: dockerfile-connector
    ports:
     - 8083:8083
    links:
     - kafka
     - sqlserver
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
      
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    depends_on:
     - sqlserver
    environment:
      - ADM_INSTALL_MSSQL=true
      - PHP_FPM_INSTALL_MSSQL=true
      - WORKSPACE_INSTALL_MSSQL=true

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.0
    restart: always
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch    

  webapi:
    build:
      dockerfile: dockerfile-api
    ports:
      - 4500:80
    depends_on:
      - elasticsearch
      - sqlserver
      - rabbitmq
volumes:
  dbdata:
    driver: local
  esdata1:
    driver: local